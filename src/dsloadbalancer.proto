syntax = "proto3";
package dsloadbalancer;

service SystemService {
    // Stores a series of key-value pairs
    rpc Put (stream KVPair) returns (BulkPutResponse) {}

    // Retrieves the values for a given list of keys
    rpc Get (BulkGetRequest) returns (stream KVPair) {}

    // Sends a Ping to Nodes to see which Nodes are running
    rpc SendPing (PingMessage) returns (PingResponse) {}

    rpc handleTask (stream TaskInfo) returns (Result) {}

}

message KVPair {
    int32 key = 1;
    int32 value = 2;
}

message BulkPutResponse {
    bool success = 1; // Corrected the spelling of 'success'
}

message BulkGetRequest {
    repeated int32 keys = 1; // Using int32 for keys
}

message PingMessage {
    string ip = 1;
    string port = 2;
}

message PingResponse {
    bool isAlive = 1;
    string ip = 2;
    string port = 3;
    string type = 4;
}

// The message representing a task request.
message TaskInfo {
    int32 dataSize = 1;
    int32 minKey = 2;
    int32 maxKey = 3;
    string workerNodeIp = 4;
    string workerNodePort = 5;
    string storageNodeIp = 6;
    string storageNodePort = 7;
}

// The message for a response, which is a hashmap with 10 unique keys.
message Result {
    repeated KVPair hashMap = 1;

}